var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.686,1,1.894]],["body/controllers/AppController.html",[0,2.517,1,2.828,2,1.941,3,0.432,4,0.372,5,0.372,6,2.882,7,0.432,8,2.038,9,4.389,10,2.181,11,0.037,12,1.289,13,3.491,14,1.571,15,1.248,16,1.128,17,1.061,18,2.507,19,2.882,20,0.432,21,0.432,22,2.48,23,2.48,24,1.571,25,3.491,26,0.021,27,0.028,28,0.021]],["title/modules/AppModule.html",[29,1.365,30,1.894]],["body/modules/AppModule.html",[1,2.685,2,2.05,3,0.319,4,0.275,5,0.275,11,0.037,16,1.352,17,0.785,18,2.573,19,2.132,20,0.319,21,0.319,26,0.016,27,0.023,28,0.016,29,1.935,30,3.499,31,1.288,32,1.436,33,1.835,34,1.835,35,1.436,36,3.054,37,1.835,38,2.132,39,2.132,40,2.132,41,2.867,42,2.867,43,2.619,44,1.835,45,1.835,46,2.582,47,2.619,48,2.582,49,1.835,50,2.582,51,3.686,52,2.582,53,2.619,54,2.582,55,2.582,56,2.582,57,2.582,58,2.582,59,2.582,60,2.582,61,2.302,62,2.582]],["title/injectables/AppService.html",[18,1.513,63,1.365]],["body/injectables/AppService.html",[3,0.46,4,0.397,5,0.397,7,0.46,8,2.124,9,4.495,11,0.037,12,1.375,14,1.676,15,1.3,16,0.928,17,1.132,18,2.354,20,0.46,21,0.46,24,1.676,26,0.023,27,0.029,28,0.023,63,2.124,64,2.326,65,3.074,66,3.723,67,3.723,68,3.723]],["title/interfaces/CorsConfig.html",[69,0.756,70,1.365]],["body/interfaces/CorsConfig.html",[3,0.398,4,0.343,5,0.343,7,0.398,11,0.037,15,1.33,20,0.663,26,0.02,27,0.026,28,0.02,69,1.337,70,2.173,71,1.448,72,1.605,73,1.748,74,2.863,75,2.684,76,0.65,77,1.448,78,1.605,79,1.931,80,1.789,81,1.789,82,1.931,83,1.789,84,1.931,85,1.931,86,1.931,87,1.789,88,1.448,89,1.789]],["title/classes/CreateUserDto.html",[21,0.375,90,1.513]],["body/classes/CreateUserDto.html",[3,0.325,4,0.28,5,0.28,7,0.325,10,2.71,11,0.037,12,1.603,15,1.429,16,0.93,20,0.325,21,0.461,26,0.016,27,0.023,28,0.016,73,1.52,76,0.877,90,1.862,91,1.31,92,3.9,93,1.866,94,4.119,95,3.582,96,3.582,97,4.339,98,5.184,99,2.626,100,2.626,101,4.724,102,3.731,103,3.731,104,2.626,105,3.731,106,2.626,107,4.724,108,2.168,109,3.731,110,4.724,111,4.339,112,2.626,113,3.582,114,2.626,115,1.679]],["title/interfaces/DatabaseConfig.html",[69,0.756,82,1.365]],["body/interfaces/DatabaseConfig.html",[3,0.371,4,0.319,5,0.319,7,0.371,11,0.037,15,1.524,20,0.647,26,0.018,27,0.025,28,0.018,69,1.305,70,1.841,71,1.349,72,1.496,73,1.666,74,1.667,75,1.667,76,0.941,77,1.349,78,1.496,79,1.841,80,1.667,81,1.667,82,2.096,83,1.667,84,1.841,85,2.357,86,2.252,87,2.782,88,2.252,89,1.667]],["title/modules/DatabaseModule.html",[29,1.365,41,1.686]],["body/modules/DatabaseModule.html",[3,0.463,4,0.399,5,0.399,11,0.038,16,1.295,17,1.139,20,0.463,21,0.463,26,0.023,27,0.029,28,0.023,29,2.132,31,1.869,41,2.634,47,2.662,116,3.746,117,3.092,118,1.869,119,3.245,120,3.746,121,3.746]],["title/interfaces/EnvironmentVariables.html",[69,0.756,122,2.154]],["body/interfaces/EnvironmentVariables.html",[3,0.413,4,0.356,5,0.356,7,0.413,11,0.036,15,1.608,20,0.413,23,3.713,26,0.021,27,0.027,28,0.021,69,0.832,71,1.503,73,1.791,76,1.056,85,2.352,86,2.213,122,3.125,123,2.756,124,4.314,125,4.314,126,4.314]],["title/interfaces/GlobalConfig.html",[69,0.756,84,1.365]],["body/interfaces/GlobalConfig.html",[3,0.398,4,0.343,5,0.343,7,0.398,11,0.037,15,1.478,20,0.663,26,0.02,27,0.026,28,0.02,69,1.337,70,1.931,71,1.448,72,1.605,73,1.748,74,1.789,75,1.789,76,0.65,77,1.448,78,1.605,79,1.931,80,1.789,81,1.789,82,1.931,83,1.789,84,2.173,85,1.931,86,1.931,87,1.789,88,1.448,89,2.863]],["title/interfaces/IConfig.html",[69,0.756,77,1.365]],["body/interfaces/IConfig.html",[3,0.358,4,0.309,5,0.309,7,0.358,11,0.037,15,1.261,20,0.64,26,0.018,27,0.025,28,0.018,69,1.29,70,2.22,71,1.305,72,1.446,73,1.628,74,1.612,75,1.612,76,0.997,77,1.799,78,2.461,79,2.22,80,2.743,81,2.743,82,2.22,83,2.743,84,2.22,85,1.799,86,1.799,87,1.612,88,1.305,89,1.612]],["title/classes/MongoExceptionFilter.html",[21,0.375,127,1.894]],["body/classes/MongoExceptionFilter.html",[3,0.279,4,0.241,5,0.241,7,0.279,8,1.506,11,0.037,12,0.835,14,1.017,16,1.097,17,0.687,20,0.414,21,0.414,24,1.506,26,0.014,27,0.021,28,0.014,76,0.457,88,1.982,91,1.128,115,1.017,127,2.09,128,2.377,129,1.605,130,2.83,131,3.288,132,2.83,133,3.288,134,3.88,135,3.88,136,2.26,137,1.257,138,1.257,139,3.88,140,2.761,141,1.865,142,3.88,143,1.257,144,2.761,145,1.865,146,1.865,147,1.865,148,1.865,149,1.865,150,1.865,151,1.865,152,3.288,153,1.865,154,2.761,155,1.865,156,1.865,157,1.865,158,1.411,159,1.865,160,2.09,161,2.761,162,2.761,163,2.761,164,2.761,165,1.865,166,1.865,167,2.09,168,1.865,169,1.865,170,1.865,171,1.411,172,1.605,173,1.865,174,1.865,175,1.865]],["title/injectables/MongooseConfigService.html",[63,1.365,119,1.894]],["body/injectables/MongooseConfigService.html",[3,0.384,4,0.331,5,0.331,7,0.384,8,1.885,11,0.037,12,1.547,14,1.397,16,1.182,17,0.944,20,0.384,21,0.384,22,2.205,24,1.397,26,0.019,27,0.026,28,0.019,49,2.205,61,1.938,63,1.885,64,1.938,76,0.627,115,1.397,118,1.549,119,2.616,130,2.205,137,1.726,138,1.726,176,2.562,177,5.075,178,2.562,179,3.103,180,5.461,181,3.103,182,3.103,183,4.741,184,4.188,185,3.103,186,3.103,187,3.103]],["title/interfaces/NestConfig.html",[69,0.756,79,1.365]],["body/interfaces/NestConfig.html",[3,0.398,4,0.343,5,0.343,7,0.398,11,0.037,15,1.33,20,0.663,26,0.02,27,0.026,28,0.02,69,1.337,70,1.931,71,1.448,72,1.605,73,1.748,74,1.789,75,1.789,76,0.65,77,1.448,78,1.605,79,2.173,80,1.789,81,1.789,82,1.931,83,1.789,84,1.931,85,2.414,86,2.318,87,1.789,88,1.448,89,1.789]],["title/classes/UpdateUserDto.html",[21,0.375,188,1.686]],["body/classes/UpdateUserDto.html",[3,0.49,4,0.422,5,0.422,11,0.036,16,1.223,20,0.49,21,0.49,26,0.024,27,0.03,28,0.024,90,1.978,91,1.978,93,2.816,188,2.728,189,3.272,190,3.963,191,3.272,192,3.272,193,2.816,194,2.816,195,3.963,196,3.963]],["title/classes/User.html",[21,0.375,197,1.513]],["body/classes/User.html",[3,0.268,4,0.231,5,0.231,7,0.268,10,2.883,11,0.037,12,1.705,15,1.579,16,0.968,20,0.48,21,0.268,26,0.013,27,0.02,28,0.013,61,3.226,73,1.32,76,1.103,86,1.458,91,1.08,94,3.205,95,3.205,96,3.205,118,1.08,143,1.203,158,2.692,160,1.352,171,2.024,197,1.937,198,1.352,199,3.883,200,3.883,201,4.616,202,3.24,203,2.164,204,3.24,205,2.164,206,3.24,207,4.844,208,2.164,209,2.164,210,2.164,211,4.844,212,2.164,213,3.24,214,2.164,215,3.24,216,1.786,217,1.538,218,2.164,219,1.352,220,1.786]],["title/controllers/UsersController.html",[0,1.686,221,1.894]],["body/controllers/UsersController.html",[0,0.897,2,0.897,3,0.199,4,0.172,5,0.172,7,0.199,8,1.161,10,2.517,11,0.038,12,1.488,14,1.813,15,1.332,16,1.004,17,0.491,20,0.199,21,0.199,22,1.146,23,1.146,24,1.813,26,0.01,27,0.016,28,0.01,76,0.744,90,2.144,115,1.658,132,2.863,137,2.049,138,2.049,188,2.606,193,1.833,194,1.833,197,0.805,221,1.612,222,1.332,223,1.613,224,1.613,225,4.431,226,3.041,227,2.13,228,2.13,229,2.13,230,1.332,231,3.224,232,1.613,233,2.13,234,1.613,235,1.332,236,2.58,237,1.613,238,3.547,239,1.332,240,2.58,241,1.613,242,1.332,243,2.58,244,1.613,245,2.58,246,1.613,247,1.613,248,1.613,249,1.609,250,1.332,251,1.332,252,1.332,253,1.146,254,1.613,255,1.613,256,4.029,257,4.029,258,1.613,259,4.956,260,4.029,261,1.613,262,1.613,263,1.613,264,1.613,265,1.613,266,1.613,267,1.613]],["title/modules/UsersModule.html",[29,1.365,42,1.686]],["body/modules/UsersModule.html",[2,2.267,3,0.369,4,0.318,5,0.318,11,0.037,16,1.303,17,0.907,20,0.369,21,0.369,26,0.018,27,0.025,28,0.018,29,2.091,31,1.488,32,1.659,33,2.119,34,2.119,35,1.659,36,3.3,37,2.119,42,3.001,43,2.897,44,2.119,45,2.119,47,2.119,115,1.343,117,2.462,118,1.488,171,1.863,197,1.488,219,2.547,221,2.901,249,2.693,250,2.462,253,2.119,268,2.462,269,2.462,270,2.983,271,2.983,272,2.983,273,2.983]],["title/injectables/UsersService.html",[63,1.365,249,1.513]],["body/injectables/UsersService.html",[3,0.23,4,0.198,5,0.198,7,0.23,8,1.297,11,0.037,12,1.685,14,1.941,15,1.393,16,1.137,17,0.565,20,0.23,21,0.23,24,1.941,26,0.011,27,0.018,28,0.011,61,1.16,63,1.297,64,1.16,76,0.871,90,2.151,115,1.941,118,0.927,137,2.397,138,2.397,143,1.033,160,1.16,172,2.83,178,1.533,188,2.736,193,2.048,194,2.048,197,0.927,217,1.319,225,4.564,226,3.287,227,2.38,228,2.38,229,2.38,230,2.38,233,4.062,235,2.38,238,2.916,239,2.38,242,2.38,249,1.438,251,1.533,252,1.533,253,1.319,274,1.533,275,1.857,276,1.857,277,2.883,278,1.857,279,1.857,280,1.857,281,1.857,282,1.857,283,1.857,284,1.857,285,1.857,286,1.857,287,2.38,288,1.857,289,1.857,290,1.857,291,1.857,292,1.857,293,1.857]],["title/classes/ValidationErrorFilter.html",[21,0.375,167,1.894]],["body/classes/ValidationErrorFilter.html",[3,0.279,4,0.241,5,0.241,7,0.279,8,1.506,11,0.037,12,0.835,14,1.017,16,1.097,17,0.687,20,0.414,21,0.414,24,1.506,26,0.014,27,0.021,28,0.014,76,0.457,88,1.982,91,1.128,115,1.017,127,1.411,128,2.377,129,1.605,130,2.83,131,2.761,132,2.83,133,3.288,134,3.288,135,3.88,137,1.257,138,1.257,139,3.88,140,3.288,141,1.865,142,3.88,143,1.257,144,3.635,145,1.865,146,1.865,147,1.865,148,1.865,149,1.865,150,1.865,151,1.865,152,3.288,153,1.865,154,2.761,155,1.865,156,1.865,157,1.865,158,1.411,159,1.865,160,2.09,161,2.761,162,2.761,163,2.761,164,2.761,165,1.865,166,1.865,167,2.488,168,1.865,169,1.865,170,1.865,171,1.411,172,1.605,173,1.865,174,1.865,175,1.865,294,2.26]],["title/coverage.html",[295,2.929]],["body/coverage.html",[0,1.939,1,1.494,5,0.255,6,1.974,11,0.037,18,1.193,21,0.595,26,0.015,27,0.021,28,0.015,35,1.33,53,1.699,63,1.853,65,1.974,69,1.252,70,1.076,72,2.4,76,0.483,77,1.076,79,1.076,82,1.076,84,1.076,90,1.193,92,1.974,93,2.478,119,1.494,122,1.699,123,1.974,127,1.494,128,2.478,129,2.478,167,1.494,176,1.974,188,1.33,189,1.974,197,1.193,198,2.178,219,1.494,221,1.494,222,1.974,249,1.193,274,1.974,287,1.974,295,1.699,296,2.391,297,2.391,298,2.391,299,5.912,300,5.185,301,3.488,302,3.488,303,1.974,304,3.488,305,4.524,306,1.974,307,2.391,308,2.391,309,3.488,310,2.391,311,2.391,312,2.391]],["title/dependencies.html",[32,2.025,313,2.539]],["body/dependencies.html",[11,0.038,17,1.049,26,0.021,27,0.028,28,0.021,32,1.919,49,2.452,108,2.849,118,1.722,143,1.919,191,2.849,192,2.849,216,2.849,314,4.997,315,3.452,316,3.452,317,3.452,318,3.452,319,4.494,320,3.452,321,3.452,322,3.452,323,3.452,324,3.452,325,3.452,326,3.452,327,3.452,328,3.452,329,3.452,330,3.452,331,3.452,332,3.452,333,3.452,334,3.452]],["title/miscellaneous/functions.html",[335,1.267,336,3.007]],["body/miscellaneous/functions.html",[7,0.55,11,0.032,26,0.027,27,0.032,28,0.027,35,3.116,306,3.674,335,2.221,336,3.674,337,4.451]],["title/index.html",[7,0.314,338,2.539,339,2.539]],["body/index.html",[4,0.295,11,0.036,26,0.017,27,0.024,28,0.017,78,2.228,113,2.285,295,1.967,340,2.768,341,2.768,342,3.872,343,2.768,344,2.768,345,2.768,346,2.768,347,2.768,348,2.768,349,2.768,350,2.768,351,2.768,352,2.768,353,5.413,354,2.768,355,2.768,356,2.768,357,5.273,358,2.768,359,2.768,360,3.872,361,2.768,362,2.768,363,2.768,364,2.768,365,3.872,366,3.872,367,2.768,368,2.768,369,2.768,370,3.872,371,3.872,372,2.768,373,2.768,374,2.768,375,2.768,376,2.768,377,2.285,378,2.768,379,2.768,380,2.768,381,2.768,382,2.768,383,2.768,384,2.768,385,2.768,386,2.768,387,2.768,388,2.768,389,2.768,390,2.768,391,2.768,392,2.768,393,2.768,394,2.768,395,2.768]],["title/modules.html",[31,2.057]],["body/modules.html",[11,0.031,26,0.026,27,0.031,28,0.026,30,2.646,31,2.114,41,2.356,42,2.356,377,4.218,396,5.11,397,5.11,398,5.488,399,4.236,400,4.236]],["title/overview.html",[401,3.403]],["body/overview.html",[2,1.867,11,0.034,18,2.46,26,0.021,27,0.027,28,0.021,29,1.511,30,3.608,31,1.675,32,1.867,33,2.386,34,2.386,35,1.867,36,2.386,37,2.386,38,2.772,39,2.772,40,2.772,41,2.742,42,3.025,43,3.136,44,2.386,45,2.386,64,2.097,71,1.511,91,1.675,249,2.46,268,2.772,269,2.772,401,2.772,402,4.414,403,3.358,404,3.358,405,3.358]],["title/miscellaneous/typealiases.html",[335,1.267,406,3.642]],["body/miscellaneous/typealiases.html",[7,0.55,11,0.032,26,0.027,27,0.032,28,0.027,76,0.899,198,2.78,217,3.74,335,2.221,407,4.451,408,3.674]],["title/miscellaneous/variables.html",[335,1.267,409,3.007]],["body/miscellaneous/variables.html",[7,0.481,11,0.035,26,0.024,27,0.03,28,0.024,53,3.445,85,1.75,124,3.21,125,3.21,126,3.21,158,3.029,198,2.429,219,3.029,220,3.21,303,3.21,335,1.94,408,3.21,409,3.21,410,3.888,411,4.849,412,3.888,413,3.888,414,5.284]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"interfaces/NestConfig.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["11000",{"_index":151,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["17.4.0",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":403,"title":{},"body":{"overview.html":{}}}],["3",{"_index":402,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":169,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["5",{"_index":404,"title":{},"body":{"overview.html":{}}}],["5.12.6",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":405,"title":{},"body":{"overview.html":{}}}],["6.6.6",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":199,"title":{},"body":{"classes/User.html":{}}}],["address",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["address'})@isemail()@isnotempty",{"_index":99,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["aliases",{"_index":407,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":378,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":107,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({description",{"_index":97,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["app",{"_index":355,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":348,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":135,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["async",{"_index":225,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":388,"title":{},"body":{"index.html":{}}}],["available",{"_index":400,"title":{},"body":{"modules.html":{}}}],["await",{"_index":257,"title":{},"body":{"controllers/UsersController.html":{}}}],["backers",{"_index":379,"title":{},"body":{"index.html":{}}}],["body",{"_index":245,"title":{},"body":{"controllers/UsersController.html":{}}}],["boolean",{"_index":75,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":157,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["browse",{"_index":398,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":396,"title":{},"body":{"modules.html":{}}}],["building",{"_index":343,"title":{},"body":{"index.html":{}}}],["cache",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":150,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["catch",{"_index":132,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"controllers/UsersController.html":{},"classes/ValidationErrorFilter.html":{}}}],["catch(exception",{"_index":133,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["catch(mongoerror",{"_index":147,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["catch(validationerror",{"_index":166,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/MongoExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationErrorFilter.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{}}}],["classes",{"_index":91,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/MongoExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationErrorFilter.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":268,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":269,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["config",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configs/config/config",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["configs/env/env.validation",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":180,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["connectionstring",{"_index":87,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{}}}],["const",{"_index":160,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["constructor",{"_index":178,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":284,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(configservice",{"_index":179,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/MongooseConfigService.html":{},"controllers/UsersController.html":{}}}],["constructor(usermodel",{"_index":275,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('users",{"_index":254,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cors",{"_index":80,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{}}}],["corsconfig",{"_index":70,"title":{"interfaces/CorsConfig.html":{}},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"coverage.html":{}}}],["coverage",{"_index":295,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":193,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":255,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":230,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":200,"title":{},"body":{"classes/User.html":{}}}],["createdby",{"_index":170,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["createduser",{"_index":286,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":289,"title":{},"body":{"injectables/UsersService.html":{}}}],["createmongooseoptions",{"_index":177,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["createuserdto",{"_index":90,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":161,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["ctx.getresponse",{"_index":164,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["database",{"_index":81,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{}}}],["databaseconfig",{"_index":82,"title":{"interfaces/DatabaseConfig.html":{}},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"coverage.html":{}}}],["databasemodule",{"_index":41,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":204,"title":{},"body":{"classes/User.html":{}}}],["date.now",{"_index":218,"title":{},"body":{"classes/User.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":158,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/User.html":{},"classes/ValidationErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["definition",{"_index":173,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["delete",{"_index":248,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":240,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["development",{"_index":356,"title":{},"body":{"index.html":{}}}],["document",{"_index":213,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":251,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":252,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["duplicate",{"_index":155,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["e2e",{"_index":367,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":344,"title":{},"body":{"index.html":{}}}],["email",{"_index":94,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["enabled",{"_index":74,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{}}}],["environmentvariables",{"_index":122,"title":{"interfaces/EnvironmentVariables.html":{}},"body":{"interfaces/EnvironmentVariables.html":{},"coverage.html":{}}}],["envvalidation",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":259,"title":{},"body":{"controllers/UsersController.html":{}}}],["error",{"_index":142,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["error.validationerror",{"_index":145,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["errors",{"_index":174,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["exception",{"_index":139,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["exception.code",{"_index":149,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["exception.errors",{"_index":175,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["exception.filter.ts",{"_index":129,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":136,"title":{},"body":{"classes/MongoExceptionFilter.html":{}}}],["exception.filter.ts:40",{"_index":294,"title":{},"body":{"classes/ValidationErrorFilter.html":{}}}],["exceptionfilter",{"_index":131,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"interfaces/NestConfig.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":195,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["familyname",{"_index":95,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"interfaces/NestConfig.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{}}}],["findall",{"_index":226,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":227,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":262,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":235,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":105,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":342,"title":{},"body":{"index.html":{}}}],["function",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":336,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":236,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":338,"title":{"index.html":{}},"body":{}}],["givenname",{"_index":96,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["global",{"_index":83,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{}}}],["globalconfig",{"_index":84,"title":{"interfaces/GlobalConfig.html":{}},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"coverage.html":{}}}],["graph",{"_index":399,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":374,"title":{},"body":{"index.html":{}}}],["hello",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":385,"title":{},"body":{"index.html":{}}}],["host",{"_index":88,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"interfaces/NestConfig.html":{},"classes/ValidationErrorFilter.html":{}}}],["host.switchtohttp",{"_index":162,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["https://nestjs.com",{"_index":392,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":141,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["httpstatus.conflict",{"_index":153,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["httpstatus.forbidden",{"_index":159,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["iconfig",{"_index":77,"title":{"interfaces/IConfig.html":{}},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"coverage.html":{}}}],["id",{"_index":238,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":130,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/ValidationErrorFilter.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"interfaces/NestConfig.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"interfaces/NestConfig.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["injectable",{"_index":63,"title":{"injectables/AppService.html":{},"injectables/MongooseConfigService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/MongooseConfigService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"injectables/MongooseConfigService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":283,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":352,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":354,"title":{},"body":{"index.html":{}}}],["interface",{"_index":69,"title":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{}},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":71,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"overview.html":{}}}],["isalpha",{"_index":111,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":109,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":110,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["joi",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["joi.number().required",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":381,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":389,"title":{},"body":{"index.html":{}}}],["key",{"_index":156,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["last",{"_index":102,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":395,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":371,"title":{},"body":{"index.html":{}}}],["load",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"interfaces/NestConfig.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":154,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["metadata",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["miscellaneous",{"_index":335,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":370,"title":{},"body":{"index.html":{}}}],["mode",{"_index":360,"title":{},"body":{"index.html":{}}}],["model",{"_index":172,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/database/databasemodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_database_name",{"_index":124,"title":{},"body":{"interfaces/EnvironmentVariables.html":{},"miscellaneous/variables.html":{}}}],["mongo_password",{"_index":125,"title":{},"body":{"interfaces/EnvironmentVariables.html":{},"miscellaneous/variables.html":{}}}],["mongo_username",{"_index":126,"title":{},"body":{"interfaces/EnvironmentVariables.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":146,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["mongoerror",{"_index":134,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["mongoexceptionfilter",{"_index":127,"title":{"classes/MongoExceptionFilter.html":{}},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{}}}],["mongoose",{"_index":143,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"dependencies.html":{}}}],["mongooseconfigservice",{"_index":119,"title":{"injectables/MongooseConfigService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["mongoosemodule",{"_index":117,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":272,"title":{},"body":{"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":120,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoosemoduleoptions",{"_index":183,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":184,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["more",{"_index":384,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":390,"title":{},"body":{"index.html":{}}}],["name",{"_index":115,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["name'})@isnotempty()@isalpha",{"_index":103,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["nest",{"_index":78,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"index.html":{}}}],["nestconfig",{"_index":79,"title":{"interfaces/NestConfig.html":{}},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"coverage.html":{}}}],["nestframework",{"_index":394,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/MongooseConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":191,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":118,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/MongooseConfigService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":108,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["new",{"_index":287,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":341,"title":{},"body":{"index.html":{}}}],["npm",{"_index":353,"title":{},"body":{"index.html":{}}}],["number",{"_index":86,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"classes/User.html":{}}}],["open",{"_index":372,"title":{},"body":{"index.html":{}}}],["optional",{"_index":138,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":401,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":313,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":247,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":137,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["partialtype",{"_index":190,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":196,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["patch",{"_index":246,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":243,"title":{},"body":{"controllers/UsersController.html":{}}}],["please",{"_index":382,"title":{},"body":{"index.html":{}}}],["port",{"_index":85,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":231,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":223,"title":{},"body":{"controllers/UsersController.html":{}}}],["private",{"_index":285,"title":{},"body":{"injectables/UsersService.html":{}}}],["production",{"_index":362,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":340,"title":{},"body":{"index.html":{}}}],["project",{"_index":373,"title":{},"body":{"index.html":{}}}],["promise",{"_index":233,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":211,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":201,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":73,"title":{},"body":{"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"classes/User.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["read",{"_index":383,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"interfaces/EnvironmentVariables.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":228,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":266,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":239,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":351,"title":{},"body":{"index.html":{}}}],["required",{"_index":207,"title":{},"body":{"classes/User.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":163,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["response.status(400).json",{"_index":168,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["response.status(400).json(error",{"_index":165,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"interfaces/NestConfig.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"interfaces/NestConfig.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{}}}],["rimraf",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["rootdirectory",{"_index":89,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{}}}],["rpcexceptionfilter",{"_index":140,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["run",{"_index":357,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":345,"title":{},"body":{"index.html":{}}}],["schema",{"_index":171,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/ValidationErrorFilter.html":{}}}],["schemafactory",{"_index":212,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":220,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/user.schema",{"_index":253,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["server",{"_index":346,"title":{},"body":{"index.html":{}}}],["side",{"_index":347,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"interfaces/NestConfig.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"index.html":{}}}],["sponsors",{"_index":376,"title":{},"body":{"index.html":{}}}],["src/.../env.validation.ts",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":408,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/configs/config/config.interface.ts",{"_index":72,"title":{},"body":{"interfaces/CorsConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"coverage.html":{}}}],["src/configs/env/env.interface.ts",{"_index":123,"title":{},"body":{"interfaces/EnvironmentVariables.html":{},"coverage.html":{}}}],["src/configs/env/env.validation.ts",{"_index":303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/filters/mongo",{"_index":128,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/database/databasemodule.ts",{"_index":116,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/database/mongooseconfigservice.ts",{"_index":176,"title":{},"body":{"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["src/modules/database/mongooseconfigservice.ts:11",{"_index":182,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/modules/database/mongooseconfigservice.ts:9",{"_index":181,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/users/dto/create",{"_index":92,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":189,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":198,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":203,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":208,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":210,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":209,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":205,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":222,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:20",{"_index":232,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:29",{"_index":234,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:38",{"_index":237,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":244,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:56",{"_index":241,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":270,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":274,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:12",{"_index":278,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":279,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":280,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":282,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":281,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":276,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":358,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":361,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":363,"title":{},"body":{"index.html":{}}}],["started",{"_index":339,"title":{"index.html":{}},"body":{}}],["starter",{"_index":350,"title":{},"body":{"index.html":{}}}],["statements",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":152,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["stay",{"_index":386,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"interfaces/NestConfig.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":377,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":397,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":148,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["table",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":366,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":369,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":368,"title":{},"body":{"index.html":{}}}],["tests",{"_index":365,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":375,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('database.connectionstring",{"_index":186,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["this.usermodel(createuserdto",{"_index":288,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":290,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":291,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidanddelete(id).exec",{"_index":293,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate(id",{"_index":292,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":258,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":261,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":263,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":267,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":265,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":260,"title":{},"body":{"controllers/UsersController.html":{}}}],["touch",{"_index":387,"title":{},"body":{"index.html":{}}}],["true",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/MongooseConfigService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["try",{"_index":256,"title":{},"body":{"controllers/UsersController.html":{}}}],["twitter",{"_index":393,"title":{},"body":{"index.html":{}}}],["type",{"_index":76,"title":{},"body":{"interfaces/CorsConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IConfig.html":{},"classes/MongoExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"interfaces/NestConfig.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":406,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":192,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":349,"title":{},"body":{"index.html":{}}}],["ui",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["uk",{"_index":101,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["undefined",{"_index":202,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":206,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":364,"title":{},"body":{"index.html":{}}}],["update",{"_index":229,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":264,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":242,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":188,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uri",{"_index":185,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["useclass",{"_index":121,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["usenewurlparser",{"_index":187,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["user",{"_index":197,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":98,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto",{"_index":194,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":93,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":106,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":104,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":100,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":273,"title":{},"body":{"modules/UsersModule.html":{}}}],["userdocument",{"_index":217,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":277,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":224,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":271,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":250,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":219,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":221,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":42,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":249,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":216,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":215,"title":{},"body":{"classes/User.html":{}}}],["v4",{"_index":214,"title":{},"body":{"classes/User.html":{}}}],["validationerror",{"_index":144,"title":{},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{}}}],["validationerrorfilter",{"_index":167,"title":{"classes/ValidationErrorFilter.html":{}},"body":{"classes/MongoExceptionFilter.html":{},"classes/ValidationErrorFilter.html":{},"coverage.html":{}}}],["validationschema",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":112,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["value",{"_index":411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":409,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":359,"title":{},"body":{"index.html":{}}}],["website",{"_index":391,"title":{},"body":{"index.html":{}}}],["world",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":380,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport config from './configs/config/config';\nimport envValidation from './configs/env/env.validation';\nimport { DatabaseModule } from './modules/database/DatabaseModule';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [config],\n      validationSchema: envValidation,\n      isGlobal: true,\n      cache: true,\n    }),\n    DatabaseModule,\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CorsConfig.html":{"url":"interfaces/CorsConfig.html","title":"interface - CorsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CorsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configs/config/config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        enabled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IConfig {\n  nest: NestConfig;\n  cors: CorsConfig;\n  database: DatabaseConfig;\n  global: GlobalConfig;\n}\n\nexport interface NestConfig {\n  port: number;\n}\n\nexport interface CorsConfig {\n  enabled: boolean;\n}\n\nexport interface DatabaseConfig {\n  connectionString: string;\n  host: string;\n  port: number;\n}\n\nexport interface GlobalConfig {\n  rootDirectory: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                familyName\n                            \n                            \n                                givenName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'user's email address'})@IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            familyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'in the UK this is the user's last name'})@IsNotEmpty()@IsAlpha()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'in the UK this is the user's first name'})@IsNotEmpty()@IsAlpha()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsAlpha } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({ description: \"user's email address\" })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty({ description: \"in the UK this is the user's first name\" })\n  @IsNotEmpty()\n  @IsAlpha()\n  givenName: string;\n\n  @ApiProperty({ description: \"in the UK this is the user's last name\" })\n  @IsNotEmpty()\n  @IsAlpha()\n  familyName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseConfig.html":{"url":"interfaces/DatabaseConfig.html","title":"interface - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configs/config/config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        connectionString\n                                \n                                \n                                        host\n                                \n                                \n                                        port\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectionString\n                                    \n                                \n                                \n                                    \n                                        connectionString:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IConfig {\n  nest: NestConfig;\n  cors: CorsConfig;\n  database: DatabaseConfig;\n  global: GlobalConfig;\n}\n\nexport interface NestConfig {\n  port: number;\n}\n\nexport interface CorsConfig {\n  enabled: boolean;\n}\n\nexport interface DatabaseConfig {\n  connectionString: string;\n  host: string;\n  port: number;\n}\n\nexport interface GlobalConfig {\n  rootDirectory: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/database/DatabaseModule.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongooseConfigService } from './MongooseConfigService';\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      useClass: MongooseConfigService,\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentVariables.html":{"url":"interfaces/EnvironmentVariables.html","title":"interface - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configs/env/env.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        MONGO_DATABASE_NAME\n                                \n                                \n                                        MONGO_PASSWORD\n                                \n                                \n                                        MONGO_USERNAME\n                                \n                                \n                                        PORT\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        MONGO_DATABASE_NAME\n                                    \n                                \n                                \n                                    \n                                        MONGO_DATABASE_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MONGO_PASSWORD\n                                    \n                                \n                                \n                                    \n                                        MONGO_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MONGO_USERNAME\n                                    \n                                \n                                \n                                    \n                                        MONGO_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PORT\n                                    \n                                \n                                \n                                    \n                                        PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvironmentVariables {\n  readonly PORT: number;\n  readonly MONGO_USERNAME: string;\n  readonly MONGO_PASSWORD: string;\n  readonly MONGO_DATABASE_NAME: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configs/config/config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        rootDirectory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rootDirectory\n                                    \n                                \n                                \n                                    \n                                        rootDirectory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IConfig {\n  nest: NestConfig;\n  cors: CorsConfig;\n  database: DatabaseConfig;\n  global: GlobalConfig;\n}\n\nexport interface NestConfig {\n  port: number;\n}\n\nexport interface CorsConfig {\n  enabled: boolean;\n}\n\nexport interface DatabaseConfig {\n  connectionString: string;\n  host: string;\n  port: number;\n}\n\nexport interface GlobalConfig {\n  rootDirectory: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConfig.html":{"url":"interfaces/IConfig.html","title":"interface - IConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configs/config/config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cors\n                                \n                                \n                                        database\n                                \n                                \n                                        global\n                                \n                                \n                                        nest\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cors\n                                    \n                                \n                                \n                                    \n                                        cors:         CorsConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CorsConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         DatabaseConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        global\n                                    \n                                \n                                \n                                    \n                                        global:         GlobalConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GlobalConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nest\n                                    \n                                \n                                \n                                    \n                                        nest:         NestConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NestConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IConfig {\n  nest: NestConfig;\n  cors: CorsConfig;\n  database: DatabaseConfig;\n  global: GlobalConfig;\n}\n\nexport interface NestConfig {\n  port: number;\n}\n\nexport interface CorsConfig {\n  enabled: boolean;\n}\n\nexport interface DatabaseConfig {\n  connectionString: string;\n  host: string;\n  port: number;\n}\n\nexport interface GlobalConfig {\n  rootDirectory: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoExceptionFilter.html":{"url":"classes/MongoExceptionFilter.html","title":"class - MongoExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/mongo-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: MongoError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/mongo-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  RpcExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Error } from 'mongoose';\nimport ValidationError = Error.ValidationError;\nimport { MongoError } from 'mongodb';\n\n@Catch(MongoError)\nexport class MongoExceptionFilter implements ExceptionFilter {\n  catch(exception: MongoError, host: ArgumentsHost) {\n    let error;\n    switch (exception.code) {\n      case 11000:\n        error = {\n          statusCode: HttpStatus.CONFLICT,\n          message: 'Duplicate key error',\n          exception: exception,\n        };\n        break;\n      default:\n        error = {\n          statusCode: HttpStatus.FORBIDDEN,\n          message: 'MongoError',\n          exception: exception,\n        };\n    }\n    const ctx = host.switchToHttp(),\n      response = ctx.getResponse();\n\n    return response.status(400).json(error);\n  }\n}\n\n@Catch(ValidationError)\nexport class ValidationErrorFilter implements RpcExceptionFilter {\n  catch(exception: ValidationError, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp(),\n      response = ctx.getResponse();\n\n    return response.status(400).json({\n      statusCode: 400,\n      createdBy: 'ValidationErrorFilter, Schema or Model definition',\n      errors: exception.errors,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/database/MongooseConfigService.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/database/MongooseConfigService.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMongooseOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/database/MongooseConfigService.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseOptionsFactory,\n  MongooseModuleOptions,\n} from '@nestjs/mongoose';\n\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database.connectionString'),\n      useNewUrlParser: true,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NestConfig.html":{"url":"interfaces/NestConfig.html","title":"interface - NestConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NestConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configs/config/config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        port\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IConfig {\n  nest: NestConfig;\n  cors: CorsConfig;\n  database: DatabaseConfig;\n  global: GlobalConfig;\n}\n\nexport interface NestConfig {\n  port: number;\n}\n\nexport interface CorsConfig {\n  enabled: boolean;\n}\n\nexport interface DatabaseConfig {\n  connectionString: string;\n  host: string;\n  port: number;\n}\n\nexport interface GlobalConfig {\n  rootDirectory: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                created\n                            \n                            \n                                email\n                            \n                            \n                                familyName\n                            \n                            \n                                givenName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: String, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: String, unique: true, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            familyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: String, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: String, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport type UserDocument = User & Document;\n\n@Schema()\nexport class User {\n  @Prop({ type: String, default: uuidv4() })\n  _id: string;\n\n  @Prop({ type: String, unique: true, required: true })\n  email: string;\n\n  @Prop({ type: String, required: true })\n  givenName: string;\n\n  @Prop({ type: String, required: true })\n  familyName: string;\n\n  @Prop({ type: Date, default: Date.now() })\n  created: number;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './schemas/user.schema';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  async create(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.usersService.create(createUserDto);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  @Get()\n  async findAll() {\n    try {\n      return await this.usersService.findAll();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    try {\n      return await this.usersService.findOne(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    try {\n      return await this.usersService.update(id, updateUserDto);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    try {\n      return await this.usersService.remove(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User, UserDocument } from './schemas/user.schema';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private userModel: Model) {}\n\n  async create(createUserDto: CreateUserDto): Promise {\n    const createdUser = new this.userModel(createUserDto);\n    return createdUser.save();\n  }\n\n  async findAll(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async findOne(id: string) {\n    return this.userModel.findById(id).exec();\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto): Promise {\n    return this.userModel.findByIdAndUpdate(id, updateUserDto, { new: true });\n  }\n\n  async remove(id: string): Promise {\n    return this.userModel.findByIdAndDelete(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorFilter.html":{"url":"classes/ValidationErrorFilter.html","title":"class - ValidationErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/mongo-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        RpcExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/mongo-exception.filter.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            ValidationError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  RpcExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Error } from 'mongoose';\nimport ValidationError = Error.ValidationError;\nimport { MongoError } from 'mongodb';\n\n@Catch(MongoError)\nexport class MongoExceptionFilter implements ExceptionFilter {\n  catch(exception: MongoError, host: ArgumentsHost) {\n    let error;\n    switch (exception.code) {\n      case 11000:\n        error = {\n          statusCode: HttpStatus.CONFLICT,\n          message: 'Duplicate key error',\n          exception: exception,\n        };\n        break;\n      default:\n        error = {\n          statusCode: HttpStatus.FORBIDDEN,\n          message: 'MongoError',\n          exception: exception,\n        };\n    }\n    const ctx = host.switchToHttp(),\n      response = ctx.getResponse();\n\n    return response.status(400).json(error);\n  }\n}\n\n@Catch(ValidationError)\nexport class ValidationErrorFilter implements RpcExceptionFilter {\n  catch(exception: ValidationError, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp(),\n      response = ctx.getResponse();\n\n    return response.status(400).json({\n      statusCode: 400,\n      createdBy: 'ValidationErrorFilter, Schema or Model definition',\n      errors: exception.errors,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/configs/config/config.interface.ts\n            \n            interface\n            CorsConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/configs/config/config.interface.ts\n            \n            interface\n            DatabaseConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/configs/config/config.interface.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/configs/config/config.interface.ts\n            \n            interface\n            IConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/configs/config/config.interface.ts\n            \n            interface\n            NestConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/configs/env/env.interface.ts\n            \n            interface\n            EnvironmentVariables\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/configs/env/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filters/mongo-exception.filter.ts\n            \n            class\n            MongoExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filters/mongo-exception.filter.ts\n            \n            class\n            ValidationErrorFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/database/MongooseConfigService.ts\n            \n            injectable\n            MongooseConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            joi : ^17.4.0\n        \n            mongoose : ^5.12.6\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            uuid : ^8.3.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configs/env/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Joi.object({\n  PORT: Joi.number().required(),\n  MONGO_USERNAME: Joi.string().required(),\n  MONGO_PASSWORD: Joi.string().required(),\n  MONGO_DATABASE_NAME: Joi.string().required(),\n})\n                        \n                    \n\n\n            \n        \n\n    src/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
